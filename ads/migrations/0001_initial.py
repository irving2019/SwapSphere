# Generated by Django 4.2.21 on 2025-06-04 18:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='URL изображения')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='ads/', verbose_name='Изображение')),
                ('category', models.CharField(choices=[('smartphones', 'Смартфоны и телефоны'), ('computers', 'Компьютеры и ноутбуки'), ('tablets', 'Планшеты'), ('audio_video', 'Аудио и видео'), ('cameras', 'Фото и видеокамеры'), ('gaming', 'Игровые консоли'), ('appliances', 'Бытовая техника'), ('mens_clothing', 'Мужская одежда'), ('womens_clothing', 'Женская одежда'), ('kids_clothing', 'Детская одежда'), ('shoes', 'Обувь'), ('accessories', 'Аксессуары'), ('furniture', 'Мебель'), ('home_decor', 'Декор и интерьер'), ('kitchen', 'Кухонные принадлежности'), ('garden', 'Сад и огород'), ('repair', 'Ремонт и строительство'), ('books', 'Книги и журналы'), ('music_instruments', 'Музыкальные инструменты'), ('art_crafts', 'Творчество и рукоделие'), ('collectibles', 'Коллекционирование'), ('sports_equipment', 'Спортивные товары'), ('outdoor', 'Туризм и отдых'), ('bicycles', 'Велосипеды'), ('fitness', 'Фитнес'), ('auto_parts', 'Автозапчасти'), ('motorcycles', 'Мотоциклы'), ('auto_accessories', 'Автоаксессуары'), ('toys', 'Игрушки'), ('baby_products', 'Товары для малышей'), ('kids_transport', 'Детский транспорт'), ('cosmetics', 'Косметика и парфюмерия'), ('health', 'Здоровье и медицина'), ('pet_supplies', 'Товары для животных'), ('real_estate', 'Недвижимость'), ('services', 'Услуги'), ('other', 'Другое')], default='other', max_length=100, verbose_name='Категория')),
                ('condition', models.CharField(choices=[('new', 'Новый'), ('used', 'Б/У')], default='used', max_length=50, verbose_name='Состояние')),
                ('status', models.CharField(choices=[('available', 'Доступен'), ('in_exchange', 'В обмене'), ('exchanged', 'Обменен')], default='available', max_length=50, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Пользовательский аватар')),
                ('default_avatar', models.CharField(choices=[('default1.png', 'Аватар 1'), ('default2.png', 'Аватар 2'), ('default3.png', 'Аватар 3'), ('default4.png', 'Аватар 4'), ('default5.png', 'Аватар 5'), ('default6.png', 'Аватар 6'), ('default7.png', 'Аватар 7'), ('default8.png', 'Аватар 8'), ('default9.png', 'Аватар 9'), ('default10.png', 'Аватар 10')], default='default1.png', max_length=20, verbose_name='Аватар по умолчанию')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='О себе')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верифицированный пользователь')),
                ('show_phone', models.BooleanField(default=True, verbose_name='Показывать номер телефона')),
                ('show_email', models.BooleanField(default=False, verbose_name='Показывать email')),
                ('show_full_name', models.BooleanField(default=True, verbose_name='Показывать полное имя')),
                ('show_birth_date', models.BooleanField(default=False, verbose_name='Показывать дату рождения')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания профиля')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата обновления профиля')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема сообщения')),
                ('content', models.TextField(verbose_name='Содержание сообщения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='ads.privatemessage', verbose_name='Родительское сообщение')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Личное сообщение',
                'verbose_name_plural': 'Личные сообщения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Сообщение')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('accepted', 'Принята'), ('rejected', 'Отклонена'), ('cancelled', 'Отменена'), ('completed', 'Завершена')], default='pending', max_length=50, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_read_by_sender', models.BooleanField(default=True, verbose_name='Прочитано отправителем')),
                ('is_read_by_receiver', models.BooleanField(default=False, verbose_name='Прочитано получателем')),
                ('sender_confirmed_exchange', models.BooleanField(default=False, verbose_name='Отправитель подтвердил обмен')),
                ('receiver_confirmed_exchange', models.BooleanField(default=False, verbose_name='Получатель подтвердил обмен')),
                ('exchange_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения обмена')),
                ('ad_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_proposals', to='ads.ad', verbose_name='Получатель')),
                ('ad_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_proposals', to='ads.ad', verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Предложение обмена',
                'verbose_name_plural': 'Предложения обмена',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('last_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversation_last', to='ads.privatemessage', verbose_name='Последнее сообщение')),
                ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
            ],
            options={
                'verbose_name': 'Беседа',
                'verbose_name_plural': 'Беседы',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='AdComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000, verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитан автором объявления')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='ads.ad', verbose_name='Объявление')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='ads.adcomment', verbose_name='Родительский комментарий')),
            ],
            options={
                'verbose_name': 'Комментарий к объявлению',
                'verbose_name_plural': 'Комментарии к объявлениям',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата блокировки')),
                ('reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='Причина блокировки')),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL, verbose_name='Заблокированный пользователь')),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocking', to=settings.AUTH_USER_MODEL, verbose_name='Блокирующий пользователь')),
            ],
            options={
                'verbose_name': 'Блокировка пользователя',
                'verbose_name_plural': 'Блокировки пользователей',
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.CreateModel(
            name='AdImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='ads/images/', verbose_name='Изображение')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='URL изображения')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное изображение')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ads.ad', verbose_name='Объявление')),
            ],
            options={
                'verbose_name': 'Изображение объявления',
                'verbose_name_plural': 'Изображения объявления',
                'ordering': ['order', 'created_at'],
                'unique_together': {('ad', 'order')},
            },
        ),
    ]
